/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.util.Arrays;


/**
 *
 * @author deviant
 */
public class TelaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form TelaPrincipal
     */
    boolean[][] planeArray = new boolean[][]
    {
        {false, false, false},
        {false, false, false},
        {false, false, false}
     };
    
    boolean [][] tileIsX = new boolean [][] {
        
        {false, false, false},
        {false, false, false},
        {false, false, false}
    
    };
    boolean [][] tileIsO = new boolean [][] {
        
        {false, false, false},
        {false, false, false},
        {false, false, false}
    
    };
    
            boolean win_playerx = false;
            boolean win_playero = false;
            
            boolean playerIsX;
    
    public TelaPrincipal() {
        initComponents();
        changePlayers();
        
    }
        
    public void restartGame(){
    a1.setText("");
    a2.setText("");
    a3.setText("");
    b1.setText("");
    b2.setText("");
    b3.setText("");
    c1.setText("");
    c2.setText("");
    c3.setText("");
    for(int j = 0, i = 0; i < tileIsO.length; i++){
        
    tileIsO[i][0] = false;    
    tileIsX[i][0] = false;    
    planeArray[i][0] = false;
    
    tileIsO[i][1] = false;    
    tileIsX[i][1] = false;    
    planeArray[i][1] = false;
    
    tileIsO[i][2] = false;    
    tileIsX[i][2] = false;    
    planeArray[i][2] = false;

        
    }
   
    
    
    
    tb_player.setEnabled(true);
    win_playero = false;
    win_playerx = false;
    

    }
    public void changePlayers(){
        playerIsX = !playerIsX;
        tb_player.setEnabled(false);

        if(playerIsX){
            System.out.println("Player is X");
            lb_currentPlayer.setText("Current player: X");
        } else{
            lb_currentPlayer.setText("Current player: O");
            System.out.println("Player is O");
        }
       
        
    }
    public boolean getPlayer(){
        return playerIsX;
    }
    public void playerWon(){
    
        if(tileIsX[0][0] && tileIsX[0][1] && tileIsX[0][2]){
            win_playerx = true;
        }
        else if (tileIsX[1][0] && tileIsX[1][1] && tileIsX[1][2])
        {
            win_playerx = true;
        } 
        else if (tileIsX[2][0] && tileIsX[2][1] && tileIsX[2][2])
        {
            win_playerx = true;
        }
        
        // Vertical
        if(tileIsX[0][0] && tileIsX[1][0] && tileIsX[2][0]){
            win_playerx = true;
        }
        else if(tileIsX[0][1] && tileIsX[1][1] && tileIsX[2][1]){
            win_playerx = true;
        } 
        else if(tileIsX[0][2] && tileIsX[1][2] && tileIsX[2][2]){
            win_playerx = true;
        }
        // Diagonal
        // post[altura][comprimento]
        if(tileIsX[0][0] && tileIsX[1][1] && tileIsX[2][2]){
            win_playerx = true;
        }
        if(tileIsX[2][0] && tileIsX[1][1] && tileIsX[0][2]){
            win_playerx = true;
        }
        
       // Player O
       
       
       if(tileIsO[0][0] && tileIsO[0][1] && tileIsO[0][2]){
            win_playero = true;
        }
       else if (tileIsO[1][0] && tileIsO[1][1] && tileIsO[1][2])
        {
            win_playero = true;
        } 
       else if(tileIsO[2][0] && tileIsO[2][1] && tileIsO[2][2])
        {
            win_playero = true;
        }
        // Vertical
        if(tileIsO[0][0] && tileIsO[1][0] && tileIsO[2][0]){
            win_playero = true;
        }
        else if(tileIsO[0][1] && tileIsO[1][1] && tileIsO[2][1]){
            win_playero = true;
        } 
        else if(tileIsO[0][2] && tileIsO[1][2] && tileIsO[2][2]){
            win_playero = true;
        }
        // Diagonal
        // post[altura][comprimento]
        if(tileIsO[0][0] && tileIsO[1][1] && tileIsO[2][2]){
            win_playero = true;
        }
        if(tileIsO[2][0] && tileIsO[1][1] && tileIsO[0][2]){
            win_playero = true;
        }
       
        
        
        
        System.out.println("X has won: "+ win_playerx);
        System.out.print("O has won: " + win_playero);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        a1 = new javax.swing.JButton();
        a2 = new javax.swing.JButton();
        a3 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        c1 = new javax.swing.JButton();
        c2 = new javax.swing.JButton();
        c3 = new javax.swing.JButton();
        tb_player = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        lb_currentPlayer = new javax.swing.JLabel();
        btn_restart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(3, 3, 1, 1));

        a1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a1ActionPerformed(evt);
            }
        });
        jPanel1.add(a1);

        a2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a2ActionPerformed(evt);
            }
        });
        jPanel1.add(a2);

        a3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a3ActionPerformed(evt);
            }
        });
        jPanel1.add(a3);

        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });
        jPanel1.add(b1);

        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });
        jPanel1.add(b2);

        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });
        jPanel1.add(b3);

        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });
        jPanel1.add(c1);

        c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ActionPerformed(evt);
            }
        });
        jPanel1.add(c2);

        c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c3ActionPerformed(evt);
            }
        });
        jPanel1.add(c3);

        tb_player.setText("Change player");
        tb_player.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_playerActionPerformed(evt);
            }
        });

        jLabel1.setText("Click to change first player:");

        lb_currentPlayer.setText("Current player: ");

        btn_restart.setText("Restart");
        btn_restart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_restartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btn_restart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_currentPlayer)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tb_player, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tb_player)
                    .addComponent(btn_restart))
                .addGap(18, 18, 18)
                .addComponent(lb_currentPlayer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void a1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a1ActionPerformed
        // TODO add your handling code here:
           if(!planeArray[0][0])
        {
            System.out.println("Not yet been clicked");
            planeArray[0][0] = true;
            changePlayers();
            if(!getPlayer()){
                a1.setText("X");
                tileIsX[0][0] = true;
            
            } else{
                a1.setText("O");
                tileIsO[0][0] = true;
            }
        
        
        } else 
        {
            System.out.println("Already clicked");
        }
           playerWon();
    }//GEN-LAST:event_a1ActionPerformed

    private void tb_playerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_playerActionPerformed
        // TODO add your handling code here:
        
        if(tb_player.isSelected()){
            lb_currentPlayer.setText("Current player: X");
            playerIsX = true;
            
        } else {
            lb_currentPlayer.setText("Current player: O");
            playerIsX = false;
        }
    }//GEN-LAST:event_tb_playerActionPerformed

    private void a2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a2ActionPerformed
        // TODO add your handling code here:
        playerWon();
 
        if(!planeArray[0][1])
        {
            System.out.println("Not yet been clicked");
            planeArray[0][1] = true;
            changePlayers();
            if(!getPlayer()){
                a2.setText("X");
                tileIsX[0][1] = true;

            } else{
                a2.setText("O");
                tileIsO[0][1] = true;

            }
        
        
        } else 
        {
            System.out.println("Already clicked");
        }
        playerWon();
    }//GEN-LAST:event_a2ActionPerformed

    private void a3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a3ActionPerformed
        // TODO add your handling code here:
 
        if(!planeArray[0][2])
        {
            System.out.println("Not yet been clicked");
            planeArray[0][2] = true;
            changePlayers();
            if(!getPlayer()){
                a3.setText("X");
                tileIsX[0][2] = true;
            } else{
                a3.setText("O");
               tileIsO[0][2] = true;

            }
            
        
        
        } else 
        {
            System.out.println("Already clicked");
        }
       playerWon();

    }//GEN-LAST:event_a3ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // TODO add your handling code here:
         if(!planeArray[1][0])
        {
            System.out.println("Not yet been clicked");
            planeArray[1][0] = true;
            changePlayers();
            if(!getPlayer()){
                b1.setText("X");
               tileIsX[1][0] = true;
            } else{
                b1.setText("O");
               tileIsO[1][0] = true;

            }
        
        
        } else 
        {
            System.out.println("Already clicked");
        }
                playerWon();

    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        // TODO add your handling code here:
         if(!planeArray[1][1])
        {
            System.out.println("Not yet been clicked");
            planeArray[1][1] = true;
            changePlayers();
            if(!getPlayer()){
                b2.setText("X");
                tileIsX[1][1] = true;

            } else{
                b2.setText("O");
                tileIsO[1][1] = true;

            }
        
        
        } else 
        {
            System.out.println("Already clicked");
        }
                playerWon();

    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        // TODO add your handling code here:
         if(!planeArray[1][2])
        {
            System.out.println("Not yet been clicked");
            planeArray[1][2] = true;
            changePlayers();
            if(!getPlayer()){
                b3.setText("X");
                tileIsX[1][2] = true;
            } else{
                b3.setText("O");
                tileIsO[1][2] = true;
            }
        
        
        } else 
        {
            System.out.println("Already clicked");
        }
                playerWon();

    }//GEN-LAST:event_b3ActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        // TODO add your handling code here:
         if(!planeArray[2][0])
        {
            System.out.println("Not yet been clicked");
            planeArray[2][0] = true;
            changePlayers();
            if(!getPlayer()){
                c1.setText("X");
                tileIsX[2][0] = true;
            } else{
                c1.setText("O");
                tileIsO[2][0] = true;
            }
        
        
        } else 
        {
            System.out.println("Already clicked");
        }
                playerWon();

    }//GEN-LAST:event_c1ActionPerformed

    private void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed
        // TODO add your handling code here:
         if(!planeArray[2][1])
        {
            System.out.println("Not yet been clicked");
            planeArray[2][1] = true;
            changePlayers();
            if(!getPlayer()){
                c2.setText("X");
                tileIsX[2][1] = true;
            } else{
                c2.setText("O");
                tileIsO[2][1] = true;
            }
        
        
        } else 
        {
            System.out.println("Already clicked");
        }
                playerWon();

    }//GEN-LAST:event_c2ActionPerformed

    private void c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c3ActionPerformed
        // TODO add your handling code here:
         if(!planeArray[2][2])
        {
            System.out.println("Not yet been clicked");
            planeArray[2][2] = true;
            changePlayers();
            if(!getPlayer()){
                c3.setText("X");
                tileIsX[2][2] = true;
            } else{
                c3.setText("O");
                tileIsO[2][2] = true;
            }
        
        
        } else 
        {
            System.out.println("Already clicked");
        }
                playerWon();

    }//GEN-LAST:event_c3ActionPerformed

    private void btn_restartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_restartActionPerformed
        // TODO add your handling code here:
        restartGame();
    }//GEN-LAST:event_btn_restartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton a1;
    private javax.swing.JButton a2;
    private javax.swing.JButton a3;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton btn_restart;
    private javax.swing.JButton c1;
    private javax.swing.JButton c2;
    private javax.swing.JButton c3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lb_currentPlayer;
    private javax.swing.JToggleButton tb_player;
    // End of variables declaration//GEN-END:variables
}
